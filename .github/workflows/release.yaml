---
name: Create release pull pull_request
on: workflow_dispatch
permissions: {}
jobs:
  check-first-release:
    runs-on: ubuntu-latest
    permissions: {}
    outputs:
      latestTag: ${{steps.check-tag.outputs.latestTag}}
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
        with:
          fetch-depth: 0
      - run: |
          latestTag=$(git describe --abbrev=0 --tags)
          echo "latestTag=$latestTag" >> "$GITHUB_OUTPUT"
        id: check-tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  error-latest-tag:
    runs-on: ubuntu-latest
    permissions: {}
    if: failure()
    needs: check-first-release
    steps:
      - run: echo "::error title=Valid git tags not found::$ERROR_MESSAGE"
        env:
          ERROR_MESSAGE: |
            e.g. git tag -a v0.0.0 -m 'v0.0.0' $(git rev-list --max-parents=0 HEAD) && git push origin v0.0.0
  builld-changelog:
    runs-on: ubuntu-latest
    permissions: {}
    if: success()
    needs: check-first-release
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
        with:
          fetch-depth: 0
      # - uses: aquaproj/aqua-installer@294926f94b4233f202a2f03875c604f840cfed70 # v2.1.1
      #   with:
      #     aqua_version: v2.8.0
      - run: |
          echo "from=$(git log -1 --format=%aI ${{steps.check-tag.outputs.latestTag}}" >> $GITHUB_ENV
          echo "to=$(git log -1 --format=%aI ${{ github.event.repository.default_branch }})" >> $GITHUB_ENV
      - run: |
          pr_labels=$(gh pr list --search merged:$from..$to --json labels,number --jq '.[] | .labels[].name')
          echo $pr_labels
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # build-changelog:
  #   runs-on: ubuntu-latest
  #   needs: check-first-release
  #   steps:
  #     - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
  #       with:
  #         fetch-depth: 0
  #     - run: |
  #         git rev-list --tags --skip=0 --max-count=1
  #         git describe --abbrev=0 --tags
  #     - name: Build Changelog
  #       id: github_release
  #       uses: mikepenz/release-changelog-builder-action@v4.0.0-b02
  #       with:
  #         fromTag: ${{needs.check-first-release.outputs.current_tag}}
  #         toTag: ${{ github.ref }}
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     - run: |
  #         echo ${{steps.github_release.outputs.changelog}}
  # bump-version:
  #   runs-on: ubuntu-latest
  #   permissions: {}
  #   steps:
  #     - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
  #     - uses: aquaproj/aqua-installer@294926f94b4233f202a2f03875c604f840cfed70 # v2.1.1
  #       with:
  #         aqua_version: v2.8.0
  #     - run: |
  #         svu $BUMP_VERSION
  #       env:
  #         BUMP_VERSION: ${{ inputs.version }}
  # get-current-version:
  #   outputs:
  #     current_version: ${{steps.current.outputs.current_version}}
  #   runs-on: ubuntu-latest
  #   permissions: {}
  #   steps:
  #     - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
  #       id: current
  #     - run: |
  #         bash scripts/get-current-version.sh
  #         ls -la
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         BUMP_LEVEL: ${{ inputs.level }}
  # bump-new-version:
  #   runs-on: ubuntu-latest
  #   needs: get-current-version
  #   permissions: {}
  #   steps:
  #     - uses: aquaproj/aqua-installer@294926f94b4233f202a2f03875c604f840cfed70 # v2.1.1
  #       with:
  #         aqua_version: v2.8.0
  #       env:
  #         AQUA_GITHUB_TOKEN: ${{github.token}}
  #     - run: ls -la
  #       env:
  #         BUMP_LEVEL: ${{inputs.level}}
  #         current_version: ${{needs.get-current-version.outputs.current_version}}
  #         AQUA_GITHUB_TOKEN: ${{github.token}}
  # create-release-pull-request:
  #   runs-on: ubuntu-latest
  #   permissions: {}
  #   steps:
  #     - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
  #     - run: |
  #         gh pr create --head 
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}