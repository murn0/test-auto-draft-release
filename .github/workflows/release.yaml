---
name: Create release pull request
on: workflow_dispatch
permissions: {}
jobs:
  build-changelog:
    runs-on: ubuntu-latest
    permissions: {}
    outputs:
      changelog: ${{steps.github_release.outputs.changelog}}
      LATEST_TAG: ${{steps.check-tag.outputs.LATEST_TAG}}
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
        with:
          fetch-depth: 0
      - name: Get latest tag
        id: check-tag
        run: |
          latestTag=$(git describe --abbrev=0 --tags)
          echo "LATEST_TAG=$latestTag" >> "$GITHUB_OUTPUT"
      - run: echo "::error title=Valid git tags not found::$ERROR_MESSAGE"
        if: failure()
        env:
          ERROR_MESSAGE: |
            e.g. git tag -a v0.0.0 -m 'v0.0.0' $(git rev-list --max-parents=0 HEAD) && git push origin v0.0.0
      - name: Build Changelog
        id: github_release
        if: success()
        uses: mikepenz/release-changelog-builder-action@v4.0.0-b02
        with:
          fromTag: ${{steps.check-tag.outputs.LATEST_TAG}}
          toTag: ${{ github.ref }}

  bump-version:
    needs: 
      - build-changelog
    runs-on: ubuntu-latest
    permissions: {}
    if: success()
    outputs:
      RELEASE_VERSION: ${{steps.set-version.outputs.RELEASE_VERSION}}
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - uses: aquaproj/aqua-installer@294926f94b4233f202a2f03875c604f840cfed70 # v2.1.1
        with:
          aqua_version: v2.8.0
      - name: Check bump level
        run: |
          set -eu
          changelog="${{needs.build-changelog.outputs.changelog}}"
          search_features="## 🚀 Features"
          search_breaking_changes="## ⚠️ Breaking Changes"

          if [[ "$changelog" == *"$search_features"* ]]; then
              release_level="minor"
          elif [[ "$changelog" == *"$search_breaking_changes"* ]]; then
              release_level="major"
          else
              release_level="patch"
          fi

          echo "level=$release_level" >> $GITHUB_ENV
      - name: Set release version for output.
        id: set-version
        run: echo "RELEASE_VERSION=$(svu $level)" >> $GITHUB_OUTPUT
  check-milestone:
    needs: 
      - bump-version
    runs-on: ubuntu-latest
    permissions:
      issues: write
    # outputs:
    #   MILESTONE_NUMBER: ${{steps.milestone.outputs.MILESTONE_NUMBER}}
    steps:
      - name: Check to see if milestones exist and create or reopen them
        run: |
          set -eu
          milestones=$(gh api -X GET /repos/${GITHUB_REPOSITORY}/milestones -f state=all)
          if ! $(echo "${milestones}" | jq ". | any(.title == \"$RELEASE_VERSION\")"); then
            gh api -X POST repos/${GITHUB_REPOSITORY}/milestones -f title=$RELEASE_VERSION
          # elif $(echo "${milestones}" | jq ". | any(.title == \"$RELEASE_VERSION\" and .state == \"closed\")"); then
          #   milestone_number=$(echo "${milestones}" | jq ". | map(select(.title == \"$RELEASE_VERSION\")) | first | .number")
          #   gh api -X PATCH repos/${GITHUB_REPOSITORY}/milestones/${milestone_number} -f state=open
          fi

          # milestone_number=$(echo "${milestones}" | jq ". | map(select(.title == \"$RELEASE_VERSION\")) | first | .number")
          # echo "MILESTONE_NUMBER=$milestone_number" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{github.token}}
          RELEASE_VERSION: ${{needs.bump-version.outputs.RELEASE_VERSION}}
  generate-pull-request:
    needs: 
      - build-changelog
      - bump-version
      - check-milestone
    runs-on: ubuntu-latest
    permissions: {}
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - uses: aquaproj/aqua-installer@294926f94b4233f202a2f03875c604f840cfed70 # v2.1.1
        with:
          aqua_version: v2.8.0
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@b62528385c34dbc9f38e5f4225ac829252d1ea92 # v1.8.0
        with:
          app_id: ${{secrets.gh_app_id}}
          private_key: ${{secrets.gh_app_private_key}}
      - name: Set current datetime
        run: echo "CURRENT_DATETIME=$(date +"%Y-%m-%dT%H:%M:%S%z")" >> $GITHUB_ENV
        env:
          TZ: 'Asia/Tokyo'
      - name: Set milestone number
        run: |
          milestone_number=gh api -X GET /repos/${GITHUB_REPOSITORY}/milestones -f state=all | jq ". | map(select(.title == \"${RELEASE_VERSION}\")) | first | .number"
          echo $milestone_number
          echo "MILESTONE_NUMBER=$milestone_number" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{github.token}}
      - name: Generate pull request
        run: |
          set -eu
          ghcp -v
          # SAME_PR_COUNT=$(gh pr list -B $GITHUB_REF_NAME -H release/$RELEASE_VERSION --json 'id' --jq '.[] | length')
          # if [[ -z "$SAME_PR_COUNT" ]]; then
          #   ghcp empty-commit -r $GITHUB_REPOSITORY -b release/$RELEASE_VERSION -m 'chore: empty commit to open follow up pull request'
          #   gh pr create -B $GITHUB_REF_NAME -H release/$RELEASE_VERSION --title "$RELEASE_VERSION ${{env.CURRENT_DATETIME}}" --body "$CHANGELOG" --reviewer murn0 --milestone "$RELEASE_VERSION" --label Release
          # else
          #   SAME_PR_NUMBER=$(gh pr list -B $GITHUB_REF_NAME -H release/$RELEASE_VERSION --json 'number' --jq '.[].number')
          #   gh pr edit $SAME_PR_NUMBER --title "$RELEASE_VERSION ${{env.CURRENT_DATETIME}}" --body "$CHANGELOG" --milestone "$RELEASE_VERSION" --add-label Release
          # fi
          gh release create $RELEASE_VERSION --draft --notes "$CHANGELOG" --target ${{ github.ref }} --title $RELEASE_VERSION
        env:
          GITHUB_TOKEN: ${{steps.generate_token.outputs.token}}
          CHANGELOG: |-
            [Pull Requests](https://github.com/${{github.repository}}/pulls?q=is%3Apr+milestone%3A${{needs.bump-version.outputs.RELEASE_VERSION}}) | [Issues](https://github.com/${{github.repository}}/issues?q=is%3Aissue+milestone%3A${{needs.bump-version.outputs.RELEASE_VERSION}}) | [Milestone](https://github.com/${{github.repository}}/milestone/${{env.MILESTONE_NUMBER}}) | https://github.com/${{github.repository}}/compare/${{needs.build-changelog.outputs.LATEST_TAG}}...${{needs.bump-version.outputs.RELEASE_VERSION}}
            ---


            ${{needs.build-changelog.outputs.changelog}}

            ---
            > **Note**
            > This release was published on ${{env.CURRENT_DATETIME}}
          RELEASE_VERSION: ${{needs.bump-version.outputs.RELEASE_VERSION}}