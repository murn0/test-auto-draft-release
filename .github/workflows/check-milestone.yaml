name: check-milestone
on:
  push:
    paths:
      - .github/workflows/check-milestone.yaml
  workflow_dispatch:
    inputs:
      RELEASE_VERSION:
        required: true
        type: string
        default: 'v0.1.0'

permissions: {}

jobs:
  check-milestone:
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: push env
        id: push-env
        if: github.event_name == 'push'
        run: |
          echo "release_versino=v0.4.0" >> $GITHUB_OUTPUT
      - run: echo ${{github.event_name}}
      - run: cat $GITHUB_EVENT_PATH
      - name: Check to see if milestones exist and create or reopen them
        id: milestone
        run: |
          set -eu

          milestones=$(gh api -X GET /repos/${{github.repository}}/milestones -f state=all)
          #=> $RELEASE_VERSIONと同じタイトルのマイルストーンが存在しない場合は作成する
          if ! echo "${milestones}" | jq ". | any(.title == \"$RELEASE_VERSION\")"; then
            echo "存在しない"
            gh api -X POST repos/${{github.repository}}/milestones -f title="$RELEASE_VERSION"
            #=> マイルストーンを新規作成した場合は$milestonesを更新（更新しないと下記でマイルストーン番号が取得できないため）
            milestones=$(gh api -X GET /repos/${{github.repository}}/milestones -f state=all)
          elif echo "${milestones}" | jq ". | any(.title == \"$RELEASE_VERSION\" and .state == \"closed\")"; then
            echo "存在はするけどclose"
            #=> マイルストーンが存在するがcloseの場合は再度openする
            milestone_number=$(echo "${milestones}" | jq ". | map(select(.title == \"$RELEASE_VERSION\")) | first | .number")
            gh api -X PATCH repos/${{github.repository}}/milestones/"$milestone_number" -f state=open
          fi

          milestone_number=$(echo "${milestones}" | jq ". | map(select(.title == \"$RELEASE_VERSION\")) | first | .number")
          echo "$milestone_number"
          echo "MILESTONE_NUMBER=$milestone_number" >> "$GITHUB_OUTPUT"
        env:
          GITHUB_TOKEN: ${{github.token}}
          RELEASE_VERSION: ${{inputs.RELEASE_VERSION || steps.push-env.outputs.release_versino}}
  add-milestone:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    needs:
      - check-milestone
    steps:
      - name: push env
        id: push-env
        if: github.event_name == 'push'
        run: |
          echo "release_versino=v0.1.0" >> $GITHUB_OUTPUT
      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v4.0.0-b02
        with:
          fromTag: 'v0.0.0'
          toTag: ${{ github.ref }}
      - run: |
          pull_requests=${{steps.github_release.outputs.pull_requests}}
          
          # カンマで分割して配列に格納
          IFS=',' read -ra pr_array <<< "$pull_requests"

          for pr_number in "${pr_array[@]}"; do
              gh pr -R ${{github.repository}} edit "$pr_number" --milestone "$RELEASE_VERSION"
          done
        env:
          GITHUB_TOKEN: ${{github.token}}
          RELEASE_VERSION: ${{inputs.RELEASE_VERSION || steps.push-env.outputs.release_versino}}
